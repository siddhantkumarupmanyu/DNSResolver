
domain name, with recursion ==> done
domain name, with cname ==> done
domain name, without recursion
    -requires support for NS

=============================================================

Root servers work in different ways; Make DNSResolver work with them;
    - they will always return authoritative nameservers for the domain, e.g "com"
    - they will return the resolved ip addresses in the additional section
    - i tried asking for ip address but they returned same response as with nameservers
    - I have to consider this case
    - so flow should be like this
        - if i asked for namespace servers but answer section does not exist in response
        - check authoritative namespaces section
        - ask for ip for one of the servers
        - if again answer section does not exist check additional section
        - use server i queried from additional section for next query

complete resolvesDomainNameWithoutRecursion test.

no need to match id's in end to end test.
    -Should use Arrays.copyOf() to neglect first two bytes;

DNSPacketParser: refactor ParseQuery and ParseAnswers have duplications

PacketGenerator and PacketParser should go into network packages as they are used by network manager only,
    - also PacketFormatter should go into ui package;

add timeout in Network manager so other requests are made if one blocked executor for response but it never arrived

Add isValid method in DNSPacket
    -builder should call isValid()
    -isValid method should check to see of All RRs matches as specified by their counts

nextByte() in DNSPacketParser can be replace with an iterator.
    -but nextByte gives more readability, so let it remain

can extract queries and its associated methods to a inner class in DNSResolver.
    - but I think, not needed now. If I touch this class again I will do it.