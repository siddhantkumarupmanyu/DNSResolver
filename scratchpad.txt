
domain name, with recursion ==> done
domain name, with cname ==> done
domain name, without recursion ==> done

=============================================================

PacketGenerator and PacketParser should go into network packages as they are used by network manager only,
    - also PacketFormatter should go into ui package;

I have consider the case when recursion desired is true but server response have recursion available as false

Add isValid method in DNSPacket
    - builder should call isValid()
    - isValid method should check to see of All RRs matches as specified by their counts
    - not gonna do it; currently it's overkill

nextByte() in DNSPacketParser can be replace with an iterator.
    -but nextByte gives more readability, so let it remain

can extract queries and its associated methods to a inner class in DNSResolver.
    - but I think, not needed now. If I touch this class again I will do it.



================ NOTES =================

Root servers work in different ways; Make DNSResolver work with them;
    - they will always return authoritative nameservers for the domain, e.g "com"
    - they will return the resolved ip addresses in the additional section
    - i tried asking for ip address(in this case a.gtld-servers.net),
        but they returned response for "net" instead of "com" namespace server
    - I have to consider this case
    - so flow should be like this
        - if i asked for namespace servers but answer section does not exist in response
        - check authoritative namespaces section
        - select one of the servers from there
        - check additional section; and get that server's ipaddress from there.
        - use that server for next query
